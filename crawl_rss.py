# -*- coding: utf-8 -*-

from slacker import Slacker
from datetime import datetime
import os
import sys
import time
import feedparser
import requests
import pytz


url = ("https://www.exploit-db.com/rss.xml")

def crawl_rss(url):
    feed = feedparser.parse(url)
    message = ""

    for post in feed.entries:
        xml_date = post.published
        cvt_date = datetime.strptime(xml_date, '%a, %d %b %Y %H:%M:%S %z')
        now = datetime.now(pytz.utc)
        final_date = now - cvt_date

        if "1 day" in str(final_date):
            feed_title = str(post.title.encode('utf-8'))
            feed_title_LINK = '[+] ' + post.title + ' - ' + post.link + '\n'
            message += feed_title_LINK

    if message:
        date = time.strftime('%Y-%m-%d')
        message = '*%s New Exploits *\n\n%s' % (date, message)

        ######## 슬랙 전송 #############
        send_to_slack('xoxb-slack-auth-key','#exploit-db',message)

        print('==== New feeds ==== \n%s' % message)

def send_to_slack(token,channel,msg):
    slack = Slacker(token)
    slack.chat.post_message(channel, msg)

def main():
    crawl_rss(url)

if __name__ == '__main__':
    main()
